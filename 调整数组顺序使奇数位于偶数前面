// 输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。
function reOrderArray(array)
{
	 let odd=[],even=[];
    for(var i=0,len=array.length;i<len;i++){
        if(array[i]%2===0){
            even.push(array[i])
        }else if(array[i]%2===1){
            odd.push(array[i])
        }
    }
    return odd.concat(even)
    //仅使偶数在前，奇数在后。事件，空间复杂度都较小。
    // var i=0,j=array.length-1;
    // while(i<=j){
    //     if(array[i]%2===1){
    //         if(array[j]%2===0){
    //             j--;
    //         }
    //         i++;
    //     }
    //     if(array[i]%2===0){
    //         if(array[j]%2===1){
    //             let temp=array[i];
    //             array[i]=array[j];
    //             array[j]=temp;
    //             i++;
    //         }
    //         j--;
    //     }
    // }
    // return array;
}
